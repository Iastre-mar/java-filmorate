-- Создание справочных таблиц
CREATE TABLE IF NOT EXISTS ref_rating
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE

);


CREATE TABLE IF NOT EXISTS ref_genre
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE

);


-- Создание основных таблиц
CREATE TABLE IF NOT EXISTS users
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login    VARCHAR(50)  NOT NULL,
    email    VARCHAR(100) NOT NULL,
    name     VARCHAR(100),
    birthday DATE
);



CREATE TABLE IF NOT EXISTS films
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(200) NOT NULL,
    description  VARCHAR(200),
    release_date DATE,
    duration     INT,
    rating_id    BIGINT       NOT NULL,
    FOREIGN KEY (rating_id) REFERENCES ref_rating (id)
);

CREATE TABLE IF NOT EXISTS reviews
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     VARCHAR(400) NOT NULL,
    is_positive BOOLEAN,
    user_id     BIGINT       NOT NULL,
    film_id     BIGINT       NOT NULL,
    useful      BIGINT DEFAULT 0,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS events
(
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    event_type VARCHAR NOT NULL,
    operation VARCHAR NOT NULL,
    entity_id BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id)
);



-- Создание таблиц связей
CREATE TABLE IF NOT EXISTS film_genres
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id  BIGINT NOT NULL,
    genre_id BIGINT NOT NULL,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES ref_genre (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friendships
(
    user_id   BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS film_likes
(
    film_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE

);

CREATE TABLE IF NOT EXISTS review_likes
(
    review_id BIGINT  NOT NULL,
    user_id   BIGINT  NOT NULL,
    is_like   BOOLEAN NOT NULL,
    PRIMARY KEY (review_id, user_id),
    FOREIGN KEY (review_id) REFERENCES reviews (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id)
);

-- Создание индексов
CREATE UNIQUE INDEX IF NOT EXISTS uidx_film_genre ON film_genres (film_id, genre_id);
CREATE UNIQUE INDEX IF NOT EXISTS uidx_film_user_like ON film_likes (film_id, user_id);
CREATE UNIQUE INDEX IF NOT EXISTS uidx_review_user ON review_likes (review_id, user_id);
